name: Python CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with coverage
        run: |
          coverage run -m unittest discover  # Executa os testes com cobertura
          coverage report  # Exibe o relatório de cobertura no console
          coverage xml -o coverage.xml  # Gera o arquivo XML de cobertura
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: coverage.xml  # Especifica o arquivo gerado para envio ao Codecov
          token: ${{ secrets.CODECOV_TOKEN }}  # Token do Codecov, se necessário

  test-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Definir Matplotlib para não criar cache de fontes
      - name: Set Matplotlib config dir to /dev/null (avoid font cache)
        run: |
          export MPLCONFIGDIR=/dev/null

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with coverage
        run: |
          coverage run -m unittest discover  # Executa os testes com cobertura
          coverage report  # Exibe o relatório de cobertura no console
          coverage xml -o coverage.xml  # Gera o arquivo XML de cobertura
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage.xml  # Especifica o arquivo gerado para envio ao Codecov
          token: ${{ secrets.CODECOV_TOKEN }}  # Token do Codecov, se necessário          
  test-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Definir Matplotlib para não criar cache de fontes
      - name: Set Matplotlib config dir to a temporary directory (avoid font cache)
        run: |
          set MPLCONFIGDIR=%TEMP%  # Definindo o diretório de configuração do Matplotlib para um diretório temporário

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with coverage
        run: |
          coverage run -m unittest discover  # Executa os testes com cobertura
          coverage report  # Exibe o relatório de cobertura no console
          coverage xml -o coverage.xml  # Gera o arquivo XML de cobertura
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: coverage.xml  # Especifica o arquivo gerado para envio ao Codecov
          token: ${{ secrets.CODECOV_TOKEN }}  # Token do Codecov, se necessário
